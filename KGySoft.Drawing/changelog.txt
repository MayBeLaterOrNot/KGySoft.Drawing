Legend:
! Breaking change
* Compatible change
- Bugfix
+ New feature
===============================================================================

~~~~~~~~~
! v5.1.0:
~~~~~~~~~

* Assembly changes:
===================
* Referencing KGySoft.CoreLibraries 5.1.0

! KGySoft.Drawing namespace:
============================
- ImageExtensions class:
  - Fixing SaveAsTiff if currentFrameOnly = false and image contains non-icon images.
! IconExtensions class:
  ! SaveHighQuality method has been renamed to SaveAsIcon to match with its ImageExtensions counterpart.
  ! ToMultiResBitmap methods: They don't return compressed results on any platforms anymore because PNG compressed
    sub-images could cause problems even on Windows systems. The overload with the forceUncompressedResult parameter
    is now obsolete.
  - ExtractIcon and ExtractBitmap overloads: Requested icon size did not work for larger than 256x256 icon sizes or
    PNG compressed icons smaller than 256x256 pixels.
  - ExtractIcon: It could return null if the requested icon was not supported (just like ExtractNearestIcon) though
    according to the documentation this method should throw PlatformNotSupportedExteption in such cases.

- KGySoft.Drawing.Imaging namespace:
====================================
- Palette class: Fixing a possible issue in default caching logic for concurrent access.


~~~~~~~~~
! v5.0.0:
~~~~~~~~~

! Assembly changes:
===================
! Referencing KGySoft.CoreLibraries 5.0.1
+ Targeting also .NET Core 2.0.
+ Targeting also .NET Core 3.0.

+ KGySoft.Drawing.Imaging namespace:
====================================
A New namespace for fast and direct Bitmap pixel manipulation in a type-safe and managed way.
Additionally, provides types for quantizing and dithering.
The new public types in this namespace:
+ IBitmapData interface
+ IReadableBitmapData interface
+ IWritableBitmapData interface
+ IReadWriteBitmapData interface
+ IBitmapDataRow interface
+ IReadableBitmapDataRow interface
+ IWritableBitmapDataRow interface
+ IReadWriteBitmapDataRow interface
+ IDitherer interface
+ IDitheringSession interface
+ IQuantizer interface
+ IQuantizingSession interface
+ PredefinedColorsQuantizer class
+ OptimizedPaletteQuantizer class
+ OrderedDitherer class
+ ErrorDiffusionDitherer class
+ InterleavedGradientNoiseDitherer class
+ RandomNoiseDitherer class
+ Palette class
+ Color32 structure

- KGySoft.Drawing namespace:
============================
+ BitmapExtensions class:
  - Resize method:
    - Fixing resize if keepAspectRatio is true
    - Supporting every source pixel format
    * keepAspectRation parameter is now optional (default value: false)
  + New GetReadableBitmapData/GetWritableBitmapData/GetReadWriteBitmapData methods: They provide and fast managed
    pixel access and/or manipulation for any pixel formats.
  + New Quantize method: Reduces number of colors
  + New Dither method: Reduces number of colors with dithering
  + New Clear methods: Similar to Graphics.Clear but supports every PixelFormat
  + New GetColorCount method
  + New TransformColors method
  + New ReplaceColor method
  + New Inverse method
  + New MakeOpaque method
  + New MakeGrayscale method
  + New AdjustBrightness method
  + New AdjustContrast method
  + New AdjustGamma method
- IconExtensions class:
  - ExtractBitmap/ExtractBitmaps:
    - Fixing ArgumentNullException if the icon was created from a handle and keepOriginalFormat parameter was true.
    - Returning null instances on Linux for unsupported icon sizes instead of throwing an exception.
  - ExtractNearestBitmap method: On Linux if large icon size is not supported returning the next largest icon
    instead of throwing an exception.
  - Combine methods:
    - Have been fixed for indexed bitmaps with specified transparent color
    - If a Bitmap instance contain multiple icons all of them are added
+ ImageExtensions class:
  + ConvertPixelFormat method:
    + Supporting every pixel formats, including Format16bppGrayScale and Format16bppArgb1555.
    + New backColor optional parameter: Specifies a background color for non-alpha pixel formats. From now on
      converting alpha bitmaps to non-alpha ones the color of the originally alpha pixels will not be necessarily
      black. Not fully transparent pixels are blended with the specified background color.
    + New alphaThreshold optional parameter: If the new pixel format has one bit alpha or is indexed, then specifies
      a threshold value for treating alpha pixels completely transparent. Alpha pixels, which are not treated
      transparent are blended with the backColor parameter.
    + New overloads for omitting palette and for using a custom quantizer and ditherer.
  * ToGrayscale method: Now supports every source pixel format.
  - EqualsByContent method:
    - Images with different raw format were considered different even if their raw content were the same. From now
      on images with different raw format can also be considered equal (as expected based on the documentation).
    - Images with the same stride size were considered different if the absolute value of their stride were
      different (a top-down image was compared to a bottom-up image).
  + New DrawInto methods: Similar to Graphics.DrawImage but supports every PixelFormat
  ! The old SaveAsGif overloads are marked Obsolete. They are improved though and use the new quantizers/ditherers
    rather than relying on the dithering of the built-in GIF encoder.
  - SaveAsMultipageTiff method: Handling of some PixelFormats have been fixed.
  + New ToIcon overload: allows to convert non-squared images to icons, the result may have more images.
  + New SaveAsBmp method
  + New SaveAsGif overload with custom quantizer and ditherer
  + New SaveAsIcon methods
  + New SaveAsJpeg method
  + New SaveAsPng method
  + New SaveAsTiff method
- MetafileExtensions class:
  - Save method: Fixing an ArgumentException if the raw format of the metafile to save is WMF rather than EMF.


~~~~~~~~~
! v4.7.0:
~~~~~~~~~

! Assembly: Referencing KGySoft.CoreLibraries v4.7.0

! KGySoft.Drawing namespace:
============================
! IconExtensions class:
  ! ExtractNearestBitmap/ExtractNearestIcon methods: Size has preference over BPP value and on equal distances
    the larger size and higher BPP values are selected. In contrast, in previous versions the result could
    depend on the order of the stored images.
  + New ToUncompressedIcon method.
  + New IsCompressed method.
  + New GetBitsPerPixel method.
  * ToMultiResBitmap method:
    + A new overload that can be used to prevent compression for larger images in the result bitmap.
    - The original overload prevents compression in Windows XP and allows it in Windows Vista and above.
  * ExtractIcons, ExtractIcon, ExtractNearestIcon, Combine methods:
    + New overloads that can be used to prevent compression if the result icon contains larger images.
    - The original overloads prevent compression in Windows XP and allows it in Windows Vista and above.
  + SaveHighQuality method: New forceUncompressedResult optional parameter.

! ImageExtensions class:
  ! ConvertPixelFormat method:
    ! The return type has been changed to Bitmap from Image
    * The palette parameter is now optional.

* Icons class:
  + New FromStream methods.
  - Information, Warning, Question, Error, Shield, Application,
    SecurityShield, SecuritySuccess, SecurityWarning, SecurityQuestion, SecurityError properties:
    If obtained in Windows XP, the resulting icon does not contain compressed images.
  * Combine methods:
    + New overloads that can be used to prevent compression if the result icon contains larger images.
    - The original overloads prevent compression in Windows XP and allows it in Windows Vista and above.
  + Application property: 64x64 image has been added.
  + Information property: 64x64, 24x24 and 20x20 images have been added.
  + Warning property: 64x64, 24x24 and 20x20 images have been added.
  + Error property: 64x64 and 20x20 images have been added.
  + Question property: 64x64 image has been replaced, 24x24 and 20x20 images have been added.


~~~~~~~~~
* v4.6.1:
~~~~~~~~~

* KGySoft.Drawing namespace:
============================
* IconExtensions class:
  - ToMultiResBitmap: Fixing InvalidOperationException
  - ExtractBitmap and ExtractIcon overloads: Not creating unnecessary Bitmap/Icon instances, which would be discarded anyway.


~~~~~~~~~
! v4.6.0:
~~~~~~~~~

! Assembly: Applying SecurityRuleSet.Level2 and adjusting security critical calls in the whole assembly.
  This is a breaking change for .NET4.0 and above only if the caller assembly is partially trusted or is
  security transparent and tries to call the few of the public methods, which are security critical.
* Moving the repository to GitHub
! Referencing KGySoft.CoreLibraries 4.6.0 and using its public resources for general messages.
+ Dynamic localizable resources are applied for KGySoft.Drawing

! KGySoft.Drawing namespace:
============================
! Removing the Images class along with the related resources
+ Moving public SaveAsGif methods to KGySoft.Drawing from VisualizerHelpers
